{"version":3,"sources":["Components/AddCategory.jsx","helpers/getGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","hooks/useFetchGifs.js","Components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","gif","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categorie","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAEI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAmBO,OAC3CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAI,WAAOC,GAAP,qBAAAC,EAAA,6DACN,GACC,mCACH,wCAHQ,SAIDC,MAAM,GAAD,OADZ,wCACY,mBAFT,mCAES,cAA8BC,UAAUH,GAAxC,kBAHV,KADM,cAIdI,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAXrB,kBAcbL,GAda,4CAAJ,sDCYLQ,EAVK,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEzB,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCcDQ,EAjBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACd,ECFwB,SAACA,GACzB,MAA0Bd,mBAAS,CAACoB,KAAK,GAAGc,SAAQ,IAApD,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,qBAAU,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GAEDH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAKjB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAArCoB,EAAP,EAAOA,QAAcP,EAArB,EAAgBP,KAEhB,OACI,qCACI,oBAAIU,UAAU,oCAAd,SAAmDhB,GAAWA,IAC7DoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACKH,EAAOL,KAAI,SAACmB,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEc3BkB,EAvBM,WAEjB,MAAoC1C,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACKS,GAAaA,EAAWc,KAAI,SAACqB,GAAD,OAC7B,cAAC,EAAD,CACA7B,SAAU6B,GACLA,Y,MCbrBC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.62c32e0b.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length >2){\r\n            setCategories(categories=>[ inputValue, ...categories])\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n       \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs  = async (category) =>{\r\n    const limit = 10;\r\n    const apiKey = 'srO4uOUZuK75C4sD6BGMc1ZcZeKhxtVj';\r\n    const url = 'https://api.giphy.com/v1/gifs/search?';\r\n    const resp = await fetch(`${url}api_key=${apiKey}&q=${encodeURI(category)}&limit=${limit}`);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(gif=>{\r\n        return{\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    const {loading, data:images} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category&& category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n            <div className='card-grid'>\r\n                {images.map((img) => \r\n                    <GifGridItem key={img.id} {...img} />    \r\n                )}\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({data:[],loading:true});\r\n\r\n    useEffect(()=>{\r\n       getGifs(category)\r\n       .then(imgs=>{\r\n          \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n             })\r\n          \r\n           \r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from './GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {categories&& categories.map((categorie)=> \r\n                <GifGrid \r\n                category={categorie}\r\n                key={categorie}\r\n                /> )}\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}